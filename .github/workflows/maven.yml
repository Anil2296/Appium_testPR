name: Android SDK and Appium Setup

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'zulu'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y openjdk-11-jdk wget unzip

        # Install Android SDK command-line tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
        unzip commandlinetools-linux-7583922_latest.zip -d $HOME/android-sdk

        # Set environment variables for Android SDK
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
        
        # Ensure sdkmanager is available
        echo "ANDROID_HOME=$ANDROID_HOME"
        echo "PATH=$PATH"
        
        # Accept SDK licenses
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        
        # Install required platforms and build tools
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-30" "build-tools;30.0.3" "emulator" "system-images;android-30;google_apis;x86_64"
        
        # Install Appium
        npm install -g appium
        appium --version
        
        # Install Appium UIAutomator2 Driver
        npm install -g appium-uiautomator2-driver

    - name: Set up Android Emulator
      run: |
        # Create and start an Android Emulator
        echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd --name testDevice --package "system-images;android-30;google_apis;x86_64"
        nohup emulator -avd testDevice -no-window -no-audio -accel on &

    - name: Wait for Emulator to start
      run: |
        # Wait for the emulator to boot up
        timeout 3m sh -c 'while ! adb shell get-state 2>&1 | grep -q device; do sleep 5; done'

    - name: Run Appium Test
      run: |
        # Run Appium server in the background
        appium &

        # Run your test scripts (ensure you have test scripts in the repo)
        # Example: run tests with desired capabilities
        # You can replace this with your actual test runner command
        # Example: node myTestScript.js

        echo "Appium server is running, and tests should be executed"
