name: Appium TestNG Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  appium-tests:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Install Appium
      - name: Setup Appium
        run: |
          npm install -g appium@2.15
          appium -v
          appium &>/dev/null &
          sleep 5

      # Step 4: Install Android SDK Command Line Tools
      - name: Install Android SDK Command Line Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget
          
          # Download and unzip Android command-line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O /tmp/cmdline-tools.zip
          sudo unzip /tmp/cmdline-tools.zip -d /usr/local/android-sdk
          sudo rm /tmp/cmdline-tools.zip
          
          # Set up environment variables for Android SDK
          echo "ANDROID_HOME=/usr/local/android-sdk" >> $GITHUB_ENV
          echo "PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV
          
          # Verify the path and tools
          echo $ANDROID_HOME
          echo $PATH
          ls $ANDROID_HOME/cmdline-tools/latest/bin

      # Step 5: Install Android 29 SDK
      - name: Install Android 29 System Image and Platform Tools
        run: |
          # Ensure sdkmanager is available and install required components
          sdkmanager --update
          sdkmanager "platform-tools" "platforms;android-29" "system-images;android-29;google_apis;x86_64"

      # Step 6: Create and start the Android emulator
      - name: Create and start emulator
        run: |
          # Create an Android Virtual Device (AVD) with API level 29
          echo no | avdmanager create avd --force -n test-emu -k "system-images;android-29;google_apis;x86_64"
          
          # Start the emulator
          emulator -avd test-emu -no-window -no-audio -no-boot-anim -gpu off &
          
          # Wait for the emulator to boot up
          adb wait-for-device
          
          # Unlock the screen if necessary
          adb shell input keyevent 82
          
          # Optional: Add a delay to ensure the emulator is fully ready before running tests
          sleep 15

      # Step 7: Run Appium Tests
      - name: Run Appium Tests
        run: mvn clean test

      # Step 8: Stop the emulator after tests
      - name:
